[{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sander Soodla. Author, maintainer.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Soodla S (2025). Exposure2OutcomeSurv: Survival Analysis Exposure Outcome Condition Pairs. R package version 0.1.0, https://sandersoodla.github.io/Exposure2OutcomeSurv/.","code":"@Manual{,   title = {Exposure2OutcomeSurv: Survival Analysis on Exposure and Outcome Condition Pairs},   author = {Sander Soodla},   year = {2025},   note = {R package version 0.1.0},   url = {https://sandersoodla.github.io/Exposure2OutcomeSurv/}, }"},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/index.html","id":"exposure2outcomesurv-siia-eesti-keeles-kirjeldus","dir":"","previous_headings":"","what":"Survival Analysis on Exposure and Outcome Condition Pairs","title":"Survival Analysis on Exposure and Outcome Condition Pairs","text":"eesti","code":""},{"path":[]},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Survival Analysis on Exposure and Outcome Condition Pairs","text":"Exposure2OutcomeSurv R Shiny application designed exploring survival relationships user-defined exposure outcome condition cohorts using data OMOP Common Data Model (CDM) database. application allows users : * Connect OMOP CDM hosted various platforms via local DuckDB files. * Select exposure outcome condition concepts. * Perform matching create comparable patient groups. * Visualize survival differences using Kaplan-Meier plots (survminer). * Estimate Hazard Ratios using Cox Proportional Hazards models (survival). * Save load analysis results.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Survival Analysis on Exposure and Outcome Condition Pairs","text":"Connects OMOP CDM databases supported DatabaseConnector (e.g., PostgreSQL, Microsoft SQL Server, Oracle, Google BigQuery, Snowflake, Spark, Redshift, Netezza) local DuckDB files. Interactively define Exposure Outcome cohorts using condition concepts (search file upload). Performs Incidence Density Matching controlling age (year birth), gender, time. Generates Kaplan-Meier plots risk tables. Calculates Hazard Ratios Cox models, accounting matched design. Displays results interactive tables (DT) can filtered, sorted, exported. Allows saving (.rds) loading complete analysis session results.","code":""},{"path":[]},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/index.html","id":"prerequisites","dir":"","previous_headings":"Installation","what":"Prerequisites","title":"Survival Analysis on Exposure and Outcome Condition Pairs","text":"R Environment: R version 4.4.1 higher recommended. properly configured R environment necessary, especially database connectivity. See OHDSI Hades R Setup Guide detailed instructions setting R, RTools (Windows), potentially Java database drivers. Database Access: Access OMOP CDM v5.3+ database. DuckDB (Optional): intend connect local .duckdb files, must install duckdb package separately: install.packages(\"duckdb\").","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/index.html","id":"steps","dir":"","previous_headings":"Installation","what":"Steps","title":"Survival Analysis on Exposure and Outcome Condition Pairs","text":"Install GitHub: R     # install.packages(\"remotes\") # already installed     remotes::install_github(\"sandersoodla/Exposure2OutcomeSurv\") Configure Database Connection: first use, must set database connection details .Renviron file. See Configuration section details.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/index.html","id":"configuration","dir":"","previous_headings":"","what":"Configuration","title":"Survival Analysis on Exposure and Outcome Condition Pairs","text":"Edit .Renviron: Create edit .Renviron file (project root home directory) using following template. Fill values specific setup. Restart R Session: creating modifying .Renviron file, must restart R session environment variables loaded correctly. (RStudio: Session -> Restart R).","code":"# Java options (increase memory if needed for some drivers) _JAVA_OPTIONS='-Xmx4g'  # Path to folder containing database driver JAR files DATABASECONNECTOR_JAR_FOLDER='C:/path/to/jdbc_drivers'  # --- Database Type --- # Set to \"duckdb\" for local files, or the DatabaseConnector name for others # Examples: \"postgresql\", \"sql server\", \"oracle\", \"redshift\", \"bigquery\"  DBMS=\"postgresql\"  # --- Connection Details --- # Option A: If DBMS = \"duckdb\" # DB_HOST should be the FOLDER containing the .duckdb file # DB_NAME should be the FILENAME of the .duckdb file (e.g., \"cdm.duckdb\")  # Option B: If DBMS is NOT \"duckdb\" (using DatabaseConnector) # DB_HOST: Server address (e.g., \"your_server.com\", \"your_server\\\\instance\") # DB_NAME: Database name on the server (e.g., \"cdm_prod\", \"omop_db\")  DB_HOST=your-db-host DB_NAME=your-db-name DB_PORT=db-port DB_USERNAME=your-username DB_PASSWORD=your-password  # Schema containing the OMOP CDM tables CDM_SCHEMA=schema-where-CDM-is-located # Schema where the application can write temporary tables (requires WRITE access) WRITE_SCHEMA=schema-for-temporary-writing-by-CDMConnector  # --- Results Directory --- SURV_RESULTS_DIR=\"\""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Survival Analysis on Exposure and Outcome Condition Pairs","text":"Load Package: R     library(Exposure2OutcomeSurv) Launch App: Workflow: Connect database (using configured credentials). Select exposure outcome concepts. Run analysis, providing filename saving results. Explore summary table Kaplan-Meier plots. Optionally, load previously saved results.","code":"launchApp()  # Example with optional arguments (see function documentation for details): # launchApp(port = 1234, launch.browser = FALSE)"},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/index.html","id":"author-information","dir":"","previous_headings":"","what":"Author Information","title":"Survival Analysis on Exposure and Outcome Condition Pairs","text":"Author Maintainer: Sander Soodla (sandersoodla@gmail.com)","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/Exposure2OutcomeSurv-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Exposure2OutcomeSurv: Survival Analysis on Exposure and Outcome Condition Pairs — Exposure2OutcomeSurv-package","title":"Exposure2OutcomeSurv: Survival Analysis on Exposure and Outcome Condition Pairs — Exposure2OutcomeSurv-package","text":"Shiny application exploring exposure-outcome survival relationships using matched cohort data OMOP CDM. Uses Kaplan-Meier plots visualisation Cox model calculate Hazard Ratios.","code":""},{"path":[]},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/Exposure2OutcomeSurv-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Exposure2OutcomeSurv: Survival Analysis on Exposure and Outcome Condition Pairs — Exposure2OutcomeSurv-package","text":"Maintainer: Sander Soodla sandersoodla@gmail.com","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/calculateCoxResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Cox Model Results for Matched Pairs — calculateCoxResults","title":"Calculate Cox Model Results for Matched Pairs — calculateCoxResults","text":"Fits Cox Proportional Hazards model exposure-outcome pair, comparing exposed (status=1) vs. unexposed (status=0) groups. Accounts matched set structure using cluster(set_id) compute robust variance estimates hazard ratio.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/calculateCoxResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Cox Model Results for Matched Pairs — calculateCoxResults","text":"","code":"calculateCoxResults(matchedSurvivalData)"},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/calculateCoxResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Cox Model Results for Matched Pairs — calculateCoxResults","text":"matchedSurvivalData list structured generally like output calculateMatchedSurvivalData. named element corresponds exposure-outcome pair must contain $survivalData (tibble/data frame columns time_to_outcome, outcome_status, exposure_status, set_id).","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/calculateCoxResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Cox Model Results for Matched Pairs — calculateCoxResults","text":"list named unique exposure-outcome pair keys present matchedSurvivalData. element list containing Cox model results: hazardRatio Numeric estimate Hazard Ratio (Exposed vs. Unexposed). hrCiLower Numeric lower bound 95% Confidence Interval HR. hrCiUpper Numeric upper bound 95% Confidence Interval HR. hrPvalue Numeric p-value associated Hazard Ratio (Wald test). Results NA model fails converge data insufficient.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/calculateMatchedSurvivalData.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Matched Survival Data using Incidence Density Matching — calculateMatchedSurvivalData","title":"Calculate Matched Survival Data using Incidence Density Matching — calculateMatchedSurvivalData","text":"Orchestrates process fetching data, combining demographics/observation periods, applying washout, defining cohorts, performing matching, calculating survival, returning results multiple exposure-outcome pairs using Incidence Density Matching principles. calls specific helper functions step.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/calculateMatchedSurvivalData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Matched Survival Data using Incidence Density Matching — calculateMatchedSurvivalData","text":"","code":"calculateMatchedSurvivalData(   selectedExposureIds,   selectedOutcomeIds,   cdm,   conceptLabelLookup,   matchRatio = 4,   washoutYears = 2,   session = NULL )"},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/calculateMatchedSurvivalData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Matched Survival Data using Incidence Density Matching — calculateMatchedSurvivalData","text":"selectedExposureIds numeric vector concept IDs exposure conditions. selectedOutcomeIds numeric vector concept IDs outcome conditions. cdm CDM reference object created CDMConnector::cdmFromCon. conceptLabelLookup tibble data frame used lookup table find human-readable labels based concept IDs. Must contain columns concept_id concept_name_id (concept_name_id holds label). Used labeling results. matchRatio target number controls match exposed person. washoutYears washout period years applied relative outcome. session Optional. Shiny session object. provided, notifications shown Shiny UI. Otherwise, messages printed console.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/calculateMatchedSurvivalData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Matched Survival Data using Incidence Density Matching — calculateMatchedSurvivalData","text":"list names unique keys processed exposure-outcome pair (e.g., \"pair_exposureID_outcomeID\"). element list list containing: survivalData tibble generated calculatePairSurvival pair. exposureId Numeric ID exposure. outcomeId Numeric ID outcome. exposureLabel Character label exposure (conceptLabelLookup). outcomeLabel Character label outcome (conceptLabelLookup). nExposedIncludedInMatching Count exposed individuals checking prior outcomes. nExposedMatched Count exposed individuals successfully matched >=1 control. nUnexposedMatched Total count matched unexposed controls. nTotalPersonsInAnalysis Total number rows (persons) final survivalData pair. Returns NULL major initial error occurs (e.g., fetching data fails, initial cohort empty) exposure-outcome pairs yield valid results.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/calculatePairSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Survival Time and Status for a Matched Pair — calculatePairSurvival","title":"Calculate Survival Time and Status for a Matched Pair — calculatePairSurvival","text":"Calculates time--event (outcome) event status person matched cohort data. Time calculated index date. Censoring occurs outcome date end observation period, whichever comes first index date.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/calculatePairSurvival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Survival Time and Status for a Matched Pair — calculatePairSurvival","text":"","code":"calculatePairSurvival(   matchedDataFinal,   cohortBaseForOutcome,   outcomeDatesCurrentOutcome,   session = NULL )"},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/calculatePairSurvival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Survival Time and Status for a Matched Pair — calculatePairSurvival","text":"matchedDataFinal tibble containing matched sets data, returned performPairMatching. Must include person_id, set_id, exposure_status, index_date. cohortBaseForOutcome tibble representing cohort passed outcome washout, used retrieve observation periods (obs_start_date, obs_end_date) matched individuals. outcomeDatesCurrentOutcome tibble containing person_id outcome_date specific outcome analyzed. session Optional. Shiny session object.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/calculatePairSurvival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Survival Time and Status for a Matched Pair — calculatePairSurvival","text":"tibble ready survival analysis. Includes person_id, set_id, exposure_status, index_date, study_exit_date, time_to_outcome (days), outcome_status (1 event occurred, 0 censored). Returns NULL valid survival data rows generated.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/defineExposedCohortForPair.html","id":null,"dir":"Reference","previous_headings":"","what":"Define Exposed Cohort for a Specific Exposure-Outcome Pair — defineExposedCohortForPair","title":"Define Exposed Cohort for a Specific Exposure-Outcome Pair — defineExposedCohortForPair","text":"Identifies individuals exposed specific condition within pre-filtered (washout-applied) cohort. Ensures exposure occurs within observation period outcome (present person) occurs strictly exposure date.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/defineExposedCohortForPair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define Exposed Cohort for a Specific Exposure-Outcome Pair — defineExposedCohortForPair","text":"","code":"defineExposedCohortForPair(   cohortBaseForOutcome,   allConditionFirstDates,   outcomeDatesCurrentOutcome,   exposureId,   outcomeId,   session = NULL )"},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/defineExposedCohortForPair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define Exposed Cohort for a Specific Exposure-Outcome Pair — defineExposedCohortForPair","text":"cohortBaseForOutcome tibble representing cohort already passed outcome-specific washout, returned filterByWashoutAndGetOutcomeDates. allConditionFirstDates tibble containing first occurrence dates relevant concept IDs, returned fetchDataForSurvAnalysis. outcomeDatesCurrentOutcome tibble person_id outcome_date specific outcome analyzed current loop iteration. exposureId numeric concept ID exposure condition. outcomeId numeric concept ID outcome condition. session Optional. Shiny session object.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/defineExposedCohortForPair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define Exposed Cohort for a Specific Exposure-Outcome Pair — defineExposedCohortForPair","text":"list containing: exposed tibble defining exposed cohort pair. Contains unique exposure events (exposed_person_id, index_date, year_of_birth, gender_concept_id) meeting criteria. exposureDates tibble person_id exposure_date (first occurrence) specific exposureId among cohortBaseForOutcome. Returns NULL exposed valid exposed individuals found NULLfor exposed exposureDates cohortBaseForOutcome null empty","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/fetchDataForSurvAnalysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch Base Data for Survival Analysis — fetchDataForSurvAnalysis","title":"Fetch Base Data for Survival Analysis — fetchDataForSurvAnalysis","text":"Fetches initial demographic, observation period, condition occurrence data required survival analysis workflow.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/fetchDataForSurvAnalysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch Base Data for Survival Analysis — fetchDataForSurvAnalysis","text":"","code":"fetchDataForSurvAnalysis(cdm, allConceptIdsToFetch, session = NULL)"},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/fetchDataForSurvAnalysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch Base Data for Survival Analysis — fetchDataForSurvAnalysis","text":"cdm CDM reference object created CDMConnector::cdmFromCon. allConceptIdsToFetch numeric vector exposure outcome concept IDs fetch first occurrence dates. session Optional. Shiny session object. provided, notifications shown Shiny UI. Otherwise, messages printed console.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/fetchDataForSurvAnalysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch Base Data for Survival Analysis — fetchDataForSurvAnalysis","text":"list containing: demographics tibble person_id, gender_concept_id, year_of_birth persons non-missing gender birth year. obsPeriods tibble person_id, observation_period_start_date, observation_period_end_date. conditionDates tibble person_id, concept_id, condition_start_date (first occurrence) requested concept IDs. Returns NULL list elements data fetching fails.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/filterByWashoutAndGetOutcomeDates.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Cohort by Washout and Get Corresponding Outcome Dates — filterByWashoutAndGetOutcomeDates","title":"Filter Cohort by Washout and Get Corresponding Outcome Dates — filterByWashoutAndGetOutcomeDates","text":"Filters base cohort based washout period specific outcome ID. also extracts returns table containing first occurrence dates specific outcome.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/filterByWashoutAndGetOutcomeDates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Cohort by Washout and Get Corresponding Outcome Dates — filterByWashoutAndGetOutcomeDates","text":"","code":"filterByWashoutAndGetOutcomeDates(   cohortBase,   allConditionDates,   outcomeId,   washoutYears,   session = NULL )"},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/filterByWashoutAndGetOutcomeDates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Cohort by Washout and Get Corresponding Outcome Dates — filterByWashoutAndGetOutcomeDates","text":"cohortBase tibble representing base cohort, containing demographics observation period data fetchDataForSurvAnalysis, joined together person_id. allConditionDates tibble containing first occurrence dates relevant concept IDs (person_id, concept_id, condition_start_date). Typically obtained fetchDataForSurvAnalysis. outcomeId numeric concept ID outcome condition apply washout extract dates. washoutYears minimum number years washout period. session Optional. Shiny session object.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/filterByWashoutAndGetOutcomeDates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Cohort by Washout and Get Corresponding Outcome Dates — filterByWashoutAndGetOutcomeDates","text":"list containing: cohortEligible tibble containing subset cohortBase meets washout criteria specified outcomeId. outcomeDates tibble person_id outcome_date (first occurrence) specifically provided outcomeId. Returns empty tibble cohortEligible persons remain washout.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/filterByWashoutAndGetOutcomeDates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter Cohort by Washout and Get Corresponding Outcome Dates — filterByWashoutAndGetOutcomeDates","text":"Individuals kept filtered cohort either outcome first occurrence required washout period end date (relative observation start date).","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/generateKmPlotObjects.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Kaplan-Meier Plot Objects for Matched Pairs — generateKmPlotObjects","title":"Generate Kaplan-Meier Plot Objects for Matched Pairs — generateKmPlotObjects","text":"Creates Kaplan-Meier plots (risk tables) using survminer calculates log-rank p-values exposure-outcome pair present matched survival data. Adjusts plot limits dynamically.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/generateKmPlotObjects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Kaplan-Meier Plot Objects for Matched Pairs — generateKmPlotObjects","text":"","code":"generateKmPlotObjects(matchedSurvivalData, maxPlotTime = 1825, session = NULL)"},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/generateKmPlotObjects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Kaplan-Meier Plot Objects for Matched Pairs — generateKmPlotObjects","text":"matchedSurvivalData list structured generally like output calculateMatchedSurvivalData. named element corresponds exposure-outcome pair list must contain least: $survivalData (tibble/data frame columns time_to_outcome, outcome_status, exposure_status) descriptive character labels $exposureLabel, $outcomeLabel. maxPlotTime Numeric. maximum time (days, starting index date) display x-axis Kaplan-Meier plots. Defaults 1825 (~5 years). session Optional. Shiny session object. provided, notifications shown Shiny UI. Otherwise, messages printed console.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/generateKmPlotObjects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Kaplan-Meier Plot Objects for Matched Pairs — generateKmPlotObjects","text":"list named unique exposure-outcome pair keys present matchedSurvivalData. element list containing: plotObject list object returned survminer::ggsurvplot. contains elements like $plot (ggplot KM curve) $table (risk table plot). kmPValueInfo object returned survminer::surv_pvalue, containing details log-rank test p-value. Returns empty list matchedSurvivalData NULL empty.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/launchApp.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch the Exposure2OutcomeSurv Shiny Application — launchApp","title":"Launch the Exposure2OutcomeSurv Shiny Application — launchApp","text":"function runs main Shiny application interface exploring exposure-outcome survival relationships using matched cohort data OMOP CDM.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/launchApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch the Exposure2OutcomeSurv Shiny Application — launchApp","text":"","code":"launchApp(launch.browser = TRUE, ...)"},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/launchApp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Launch the Exposure2OutcomeSurv Shiny Application — launchApp","text":"launch.browser Logical; TRUE, app open system's default web browser. Defaults TRUE. Passed via options argument shiny::shinyApp. ... Additional arguments passed options shiny::shinyApp (e.g., port, host). See ?shiny::shinyApp details available options.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/launchApp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Launch the Exposure2OutcomeSurv Shiny Application — launchApp","text":"Invisibly returns result shiny::shinyApp (launches app)","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/launchApp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Launch the Exposure2OutcomeSurv Shiny Application — launchApp","text":"function calls shiny::shinyApp, using app_ui app_server functions defined within 'Exposure2OutcomeSurv' package create application.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/launchApp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Launch the Exposure2OutcomeSurv Shiny Application — launchApp","text":"","code":"if (FALSE) { # \\dontrun{   # To run the application   launchApp()    # To run on a specific port and host   # launchApp(port = 1234, host = \"0.0.0.0\") } # }"},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/performPairMatching.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Incidence Density Matching for an Exposure-Outcome Pair — performPairMatching","title":"Perform Incidence Density Matching for an Exposure-Outcome Pair — performPairMatching","text":"Matches unexposed controls exposed individuals based incidence density sampling principles. Matching performed gender (exact) age (nearest neighbor based year birth) within risk set exposed individual's index date. Controls must free specific exposure outcome prior index date.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/performPairMatching.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Incidence Density Matching for an Exposure-Outcome Pair — performPairMatching","text":"","code":"performPairMatching(   exposedCohortDefinition,   controlsPoolBaseOutcome,   exposureDatesCurrentExposure,   matchRatio,   exposureId,   outcomeId,   session = NULL )"},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/performPairMatching.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Incidence Density Matching for an Exposure-Outcome Pair — performPairMatching","text":"exposedCohortDefinition tibble exposed individuals eligible matching, returned defineExposedCohortForPair. Must contain exposed_person_id, index_date, year_of_birth, gender_concept_id. controlsPoolBaseOutcome tibble representing potential control pool (passed outcome washout), containing person_id, year_of_birth, gender_concept_id, obs_start_date, obs_end_date, potentially outcome_date. exposureDatesCurrentExposure tibble containing person_id exposure_date specific exposure matched. matchRatio target number controls match exposed person. exposureId numeric concept ID exposure (notifications). outcomeId numeric concept ID outcome (notifications). session Optional. Shiny session object.","code":""},{"path":"https://sandersoodla.github.io/Exposure2OutcomeSurv/reference/performPairMatching.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Incidence Density Matching for an Exposure-Outcome Pair — performPairMatching","text":"list containing: matchedData tibble containing matched sets. Includes person_id, exposure_status (1 exposed, 0 control), index_date (matched exposed person), set_id (linking members matched set). nMatchedExposed number exposed individuals least one control successfully matched. Returns NULL matchedData matched sets created.","code":""}]
